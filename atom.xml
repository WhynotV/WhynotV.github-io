<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Whynot&#39;Blog</title>
  
  <subtitle>努力把自己培养成理想型</subtitle>
  <link href="https://whynotv.github.io/atom.xml" rel="self"/>
  
  <link href="https://whynotv.github.io/"/>
  <updated>2024-06-12T15:15:06.944Z</updated>
  <id>https://whynotv.github.io/</id>
  
  <author>
    <name>咕咕</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="https://whynotv.github.io/posts/3eeb.html"/>
    <id>https://whynotv.github.io/posts/3eeb.html</id>
    <published>2024-06-12T15:15:06.944Z</published>
    <updated>2024-06-12T15:15:06.944Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>灰狼算法</title>
    <link href="https://whynotv.github.io/posts/0.html"/>
    <id>https://whynotv.github.io/posts/0.html</id>
    <published>2024-06-12T15:15:06.944Z</published>
    <updated>2024-06-12T15:15:06.944Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[WolfPops, Tracks]</span> = <span class="title">BoundAdjust</span><span class="params">(WolfPops, ProbPoints, UAV)</span></span></span><br><span class="line"><span class="comment">%BOUNDADJUST 约束处理</span></span><br><span class="line">Tracks = Pops2Tracks(WolfPops, UAV); </span><br><span class="line"></span><br><span class="line"><span class="comment">% ①  不满足约束：&quot;删除&quot;航迹点，即取前后平均值</span></span><br><span class="line">dim = UAV.PointDim;                                    <span class="comment">% 维度</span></span><br><span class="line"><span class="keyword">for</span> agent = <span class="number">1</span> : <span class="built_in">size</span>(WolfPops.Pos, <span class="number">1</span>)</span><br><span class="line">    Track = Tracks&#123;agent&#125;;                             <span class="comment">% 轨迹 (struct结构)</span></span><br><span class="line">    ProbPoint = ProbPoints&#123;agent&#125;;                     <span class="comment">% 问题点</span></span><br><span class="line">    Position = [];                                     <span class="comment">% 新狼群编码</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:UAV.num</span><br><span class="line">          PointNum = UAV.PointNum(<span class="built_in">i</span>);</span><br><span class="line">          <span class="comment">% 删除一条航迹上的问题点</span></span><br><span class="line">          <span class="keyword">for</span> k = <span class="number">1</span> : PointNum</span><br><span class="line">                flag = ProbPoint&#123;<span class="built_in">i</span>&#125;(k);</span><br><span class="line">                <span class="keyword">if</span> flag == <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> k == <span class="number">1</span></span><br><span class="line">                        P1 = UAV.S(<span class="built_in">i</span>, :)&#x27; ;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        P1 = Track.P&#123;<span class="built_in">i</span>&#125;(:, k<span class="number">-1</span>);</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    <span class="keyword">if</span> k == PointNum</span><br><span class="line">                        P2 = UAV.G(<span class="built_in">i</span>, :)&#x27; ;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        P2 = Track.P&#123;<span class="built_in">i</span>&#125;(:, k+<span class="number">1</span>);</span><br><span class="line">                    <span class="keyword">end</span></span><br><span class="line">                    Track.P&#123;<span class="built_in">i</span>&#125;(:, k) = (P1+P2) / <span class="number">2</span>;  <span class="comment">% 删除航迹点</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">          <span class="keyword">end</span></span><br><span class="line">    </span><br><span class="line">          <span class="comment">% 转换为狼群编码形式</span></span><br><span class="line">          p = Track.P&#123;<span class="built_in">i</span>&#125; ;</span><br><span class="line">          p = <span class="built_in">reshape</span>(p, <span class="number">1</span>, dim*PointNum);</span><br><span class="line">          Position = [Position, p];</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    V = Track.V&#x27;;</span><br><span class="line">    Position = [Position, V];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">% 新的位置信息</span></span><br><span class="line">    WolfPops.Pos(agent, :) = Position;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% ②  边界处理：越界取边界值</span></span><br><span class="line">WolfPops.Pos = BoundClamp(WolfPops.Pos, WolfPops.lb, WolfPops.ub);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 生成新航迹</span></span><br><span class="line">Tracks = Pops2Tracks(WolfPops, UAV); </span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 边界裁剪</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span> = <span class="title">BoundClamp</span><span class="params">(x, lb, ub)</span></span></span><br><span class="line">    Flag4ub = x &gt; ub;</span><br><span class="line">    Flag4lb = x &lt; lb;</span><br><span class="line">    x = x .* ( ~(Flag4ub + Flag4lb) ) + ub .* Flag4ub + lb .* Flag4lb;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="math/tex; mode=display">F=w_1f_o+w_2f_h+w_3f_t+w_4f_m+w_5f_c</script><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution</span> = <span class="title">GWO</span><span class="params">(UAV, SearchAgents, Max_iter)</span></span></span><br><span class="line"><span class="comment">%GWO 灰狼优化算法</span></span><br><span class="line"><span class="comment">%Gray Wolf Optimization</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 超参数</span></span><br><span class="line">g = <span class="number">50</span>;       <span class="comment">% 动态加权系数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 算法初始化</span></span><br><span class="line">[WolfPops, Tracks] = PopsInit(UAV, SearchAgents, <span class="built_in">false</span>);   <span class="comment">% 随机生成 初始狼群 和 轨迹们</span></span><br><span class="line">dim = WolfPops.PosDim;                                     <span class="comment">% 状态变量维度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 初始化解</span></span><br><span class="line">Alpha_pos = <span class="built_in">zeros</span>(<span class="number">1</span>, dim);     <span class="comment">% α解</span></span><br><span class="line">Alpha_score = <span class="built_in">inf</span>;             <span class="comment">% α解适应度</span></span><br><span class="line">Alpha_no = <span class="number">1</span>;                  <span class="comment">% α解编号</span></span><br><span class="line"></span><br><span class="line">Beta_pos = <span class="built_in">zeros</span>(<span class="number">1</span>, dim);      <span class="comment">% β解</span></span><br><span class="line">Beta_score = <span class="built_in">inf</span>;              <span class="comment">% β解适应度</span></span><br><span class="line">Beta_no = <span class="number">1</span>;                   <span class="comment">% β解编号</span></span><br><span class="line"></span><br><span class="line">Delta_pos = <span class="built_in">zeros</span>(<span class="number">1</span>, dim);     <span class="comment">% δ解</span></span><br><span class="line">Delta_score = <span class="built_in">inf</span>;             <span class="comment">% δ解适应度</span></span><br><span class="line">Delta_no = <span class="number">1</span>;                  <span class="comment">% δ解编号</span></span><br><span class="line"></span><br><span class="line">Fitness_list = <span class="built_in">zeros</span>(<span class="number">1</span>, Max_iter);</span><br><span class="line"></span><br><span class="line"><span class="comment">% 迭代求解</span></span><br><span class="line">tic</span><br><span class="line">fprintf(<span class="string">&#x27;&gt;&gt;GWO 优化中    00.00%%&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> iter = <span class="number">1</span> : Max_iter</span><br><span class="line"></span><br><span class="line">    <span class="comment">% ①  计算每只狼的适应度，更改其种群等级</span></span><br><span class="line">    ProbPoints = cell(SearchAgents, <span class="number">1</span>);   </span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : SearchAgents</span><br><span class="line">        <span class="comment">% 计算目标函数</span></span><br><span class="line">        [fitness, ~, Data] = ObjFun(Tracks&#123;<span class="built_in">i</span>&#125;, UAV);    <span class="comment">% 一个智能体的目标函数</span></span><br><span class="line">        ProbPoints&#123;<span class="built_in">i</span>&#125; = Data.ProbPoint;                 <span class="comment">% 所有智能体不符合条件的状态</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% 更新 Alpha、Beta 和 Delta 解</span></span><br><span class="line">        <span class="keyword">if</span> fitness &lt;= Alpha_score  <span class="comment">% 适应能力最强（因为性能指标越小越好，因此为小于号）</span></span><br><span class="line">            Alpha_score = fitness;</span><br><span class="line">            Alpha_pos = WolfPops.Pos(<span class="built_in">i</span>, :);</span><br><span class="line">            Alpha_no = <span class="built_in">i</span>;</span><br><span class="line">        <span class="keyword">end</span> </span><br><span class="line">        <span class="keyword">if</span> fitness &gt; Alpha_score &amp;&amp; fitness &lt;= Beta_score</span><br><span class="line">            Beta_score = fitness;</span><br><span class="line">            Beta_pos = WolfPops.Pos(<span class="built_in">i</span>, :);</span><br><span class="line">            Beta_no = <span class="built_in">i</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">if</span> fitness &gt; Alpha_score &amp;&amp; fitness &gt; Beta_score &amp;&amp; fitness &lt;= Delta_score</span><br><span class="line">            Delta_score = fitness;</span><br><span class="line">            Delta_pos = WolfPops.Pos(<span class="built_in">i</span>, :);</span><br><span class="line">            Delta_no = <span class="built_in">i</span>;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% ②  更新参数a</span></span><br><span class="line">    a = <span class="number">2</span> - iter * <span class="number">2</span> / Max_iter;              <span class="comment">% 线性递减</span></span><br><span class="line">    <span class="comment">%a = 2 * cos((iter / Max_iter) * pi/2);   % 非线性递减</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% ③  更新位置（朝着前三只狼位置前进）</span></span><br><span class="line"><span class="comment">%     r1 = rand(SearchAgents, dim);</span></span><br><span class="line"><span class="comment">%     r2 = rand(SearchAgents, dim);</span></span><br><span class="line"><span class="comment">%     A1 = 2*a*r1 - a;</span></span><br><span class="line"><span class="comment">%     C1 = 2*r2;</span></span><br><span class="line"><span class="comment">%     D_alpha = abs(C1.*repmat(Alpha_pos, SearchAgents, 1) - WolfPops.Pos);</span></span><br><span class="line"><span class="comment">%     X1 = repmat(Alpha_pos, SearchAgents, 1) - A1.*D_alpha;</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">%     r1 = rand(SearchAgents, dim);</span></span><br><span class="line"><span class="comment">%     r2 = rand(SearchAgents, dim);            </span></span><br><span class="line"><span class="comment">%     A2 = 2*a*r1 - a;</span></span><br><span class="line"><span class="comment">%     C2 = 2*r2;</span></span><br><span class="line"><span class="comment">%     D_beta = abs(C2.*repmat(Beta_pos, SearchAgents, 1) - WolfPops.Pos);</span></span><br><span class="line"><span class="comment">%     X2 = repmat(Beta_pos, SearchAgents, 1) - A2.*D_beta;</span></span><br><span class="line"><span class="comment">%     </span></span><br><span class="line"><span class="comment">%     r1 = rand(SearchAgents, dim);</span></span><br><span class="line"><span class="comment">%     r2 = rand(SearchAgents, dim);</span></span><br><span class="line"><span class="comment">%     A3 = 2*a*r1 - a;</span></span><br><span class="line"><span class="comment">%     C3 = 2*r2;</span></span><br><span class="line"><span class="comment">%     D_delta = abs(C3.*repmat(Delta_pos, SearchAgents, 1) - WolfPops.Pos);</span></span><br><span class="line"><span class="comment">%     X3 = repmat(Delta_pos, SearchAgents, 1) - A3.*D_delta;</span></span><br><span class="line"><span class="comment">% </span></span><br><span class="line"><span class="comment">%     %-- 静态更新位置</span></span><br><span class="line"><span class="comment">%     WolfPops.Pos = (X1 + X2 + X3) / 3;  </span></span><br><span class="line">    <span class="comment">%-- 动态更新位置</span></span><br><span class="line"><span class="comment">%     q = g * a; </span></span><br><span class="line"><span class="comment">%     if abs(Alpha_score - Delta_score) &gt; q</span></span><br><span class="line"><span class="comment">%         Sum_score = Alpha_score + Beta_score + Delta_score;</span></span><br><span class="line"><span class="comment">%         WolfPops.Pos = (Alpha_score*X1 + Beta_score*X2 + Delta_score*X3) / Sum_score;</span></span><br><span class="line"><span class="comment">%     else</span></span><br><span class="line"><span class="comment">%         WolfPops.Pos = (X1 + X2 + X3) / 3;</span></span><br><span class="line"><span class="comment">%     end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : SearchAgents</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : dim</span><br><span class="line"></span><br><span class="line">            r1 = <span class="built_in">rand</span>();</span><br><span class="line">            r2 = <span class="built_in">rand</span>();</span><br><span class="line">            A1 = <span class="number">2</span>*a*r1 - a;</span><br><span class="line">            C1 = <span class="number">2</span>*r2;</span><br><span class="line">            D_alpha = <span class="built_in">abs</span>(C1*Alpha_pos(<span class="built_in">j</span>) - WolfPops.Pos(<span class="built_in">i</span>, <span class="built_in">j</span>));</span><br><span class="line">            X1 = Alpha_pos(<span class="built_in">j</span>) - A1*D_alpha;</span><br><span class="line"></span><br><span class="line">            r1 = <span class="built_in">rand</span>();</span><br><span class="line">            r2 = <span class="built_in">rand</span>();            </span><br><span class="line">            A2 = <span class="number">2</span>*a*r1 - a;</span><br><span class="line">            C2 = <span class="number">2</span>*r2;</span><br><span class="line">            D_beta = <span class="built_in">abs</span>(C2*Beta_pos(<span class="built_in">j</span>) - WolfPops.Pos(<span class="built_in">i</span>, <span class="built_in">j</span>));</span><br><span class="line">            X2 = Beta_pos(<span class="built_in">j</span>) - A2*D_beta;</span><br><span class="line">            </span><br><span class="line">            r1 = <span class="built_in">rand</span>();</span><br><span class="line">            r2 = <span class="built_in">rand</span>();</span><br><span class="line">            A3 = <span class="number">2</span>*a*r1 - a;</span><br><span class="line">            C3 = <span class="number">2</span>*r2;</span><br><span class="line">            D_delta = <span class="built_in">abs</span>(C3*Delta_pos(<span class="built_in">j</span>) - WolfPops.Pos(<span class="built_in">i</span>, <span class="built_in">j</span>));</span><br><span class="line">            X3 = Delta_pos(<span class="built_in">j</span>) - A3*D_delta;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">%静态更新</span></span><br><span class="line">            WolfPops.Pos(<span class="built_in">i</span>, <span class="built_in">j</span>) = (X1 + X2 + X3) / <span class="number">3</span>;</span><br><span class="line"><span class="comment">%             %动态更新</span></span><br><span class="line"><span class="comment">%             %              q = g * a; %阈值</span></span><br><span class="line"><span class="comment">%             %              if abs(Alpha_score - Delta_score) &gt; q</span></span><br><span class="line"><span class="comment">%             %                     Sum_score = Alpha_score + Beta_score + Delta_score;</span></span><br><span class="line"><span class="comment">%             %                     WolfPops.Pos(i, j) = (Alpha_score*X1 + Beta_score*X2 + Delta_score*X3) / Sum_score;</span></span><br><span class="line"><span class="comment">%             %              else</span></span><br><span class="line"><span class="comment">%             %                     WolfPops.Pos(i, j) = (X1 + X2 + X3) / 3;</span></span><br><span class="line"><span class="comment">%             %              end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% ④  调整不符合要求的状态变量</span></span><br><span class="line">    [WolfPops, Tracks] = BoundAdjust(WolfPops, ProbPoints, UAV);</span><br><span class="line"></span><br><span class="line">    <span class="comment">% ⑤  存储适应度</span></span><br><span class="line">    Fitness_list(iter) = Alpha_score;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> iter/Max_iter*<span class="number">100</span> &lt; <span class="number">10</span></span><br><span class="line">        fprintf(<span class="string">&#x27;\b\b\b\b\b%.2f%%&#x27;</span>, iter/Max_iter*<span class="number">100</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        fprintf(<span class="string">&#x27;\b\b\b\b\b\b%.2f%%&#x27;</span>, iter/Max_iter*<span class="number">100</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&#x27;\n\n&gt;&gt;计算完成！\n\n&#x27;</span>)</span><br><span class="line">toc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 输出值</span></span><br><span class="line">solution.method = <span class="string">&#x27;GWO&#x27;</span>;                <span class="comment">% 算法</span></span><br><span class="line">solution.WolfPops = WolfPops;           <span class="comment">% 所有解种群信息</span></span><br><span class="line">solution.Tracks = Tracks;               <span class="comment">% 所有解航迹信息</span></span><br><span class="line">solution.Fitness_list = Fitness_list;   <span class="comment">% α解适应度曲线</span></span><br><span class="line">solution.Alpha_Data = Data;             <span class="comment">% α解的威胁信息</span></span><br><span class="line">solution.Alpha_no = Alpha_no;           <span class="comment">% α解的位置</span></span><br><span class="line">solution.Beta_no = Beta_no;             <span class="comment">% β解的位置</span></span><br><span class="line">solution.Delta_no = Delta_no;           <span class="comment">% δ解的位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%%%   灰狼优化算法航迹规划   %%%</span></span><br><span class="line">clc, close all</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%--- 算法选择 1：GWO算法  2：MP-GWO算法</span></span><br><span class="line">options = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%--- 算法参数设置          </span></span><br><span class="line">SearchAgents = <span class="number">60</span>;           <span class="comment">% 搜索智能体个数/狼群数量/可行解的个数 （&gt;= 20）</span></span><br><span class="line">Max_iter = <span class="number">145</span> ;             <span class="comment">% 最大搜索步数     </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%--- 协同无人机设置</span></span><br><span class="line">UAV = UAV_SetUp;             <span class="comment">% 在 UAV_SetUp.m 文件进行设置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%--- 灰狼算法</span></span><br><span class="line"><span class="keyword">if</span> options &lt; <span class="number">2</span></span><br><span class="line">    solution = GWO(UAV, SearchAgents, Max_iter);  <span class="comment">% GWO算法</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    solution = MP_GWO(UAV, SearchAgents, Max_iter);  <span class="comment">% MP-GWO算法</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%--- 绘图</span></span><br><span class="line">IMG_AutoPlot(solution, UAV) <span class="comment">% 自适应绘图（全自动绘图，但不如手动的好看）</span></span><br><span class="line"><span class="comment">% IMG_Plot(solution, UAV) % 手动绘图（需手动添加无人机，默认3个）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">solution</span> = <span class="title">MP_GWO</span><span class="params">(UAV, SearchAgents, Max_iter)</span></span></span><br><span class="line"><span class="comment">%MP_GWO 多种群灰狼优化算法</span></span><br><span class="line"><span class="comment">%Multi Population Gray Wolf Optimization</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 超参数</span></span><br><span class="line">g = <span class="number">50</span>;       <span class="comment">% 动态更新加权系数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 算法初始化</span></span><br><span class="line">[WolfPops, ~] = PopsInit(UAV, SearchAgents, <span class="built_in">false</span>);   <span class="comment">% 随机生成 初始狼群</span></span><br><span class="line">ClassPops = PopsCluster(WolfPops, UAV);               <span class="comment">% 进行初始聚类（用来获得 k 值）</span></span><br><span class="line">dim = WolfPops.PosDim;                                <span class="comment">% 状态变量维度</span></span><br><span class="line">cSearchAgents = ClassPops.SearchAgents;               <span class="comment">% 搜索智能体个数（子种群数量）</span></span><br><span class="line">SearchAgents = cSearchAgents * ClassPops.k;           <span class="comment">% 对所有智能体个数进行修正（k的整数倍）</span></span><br><span class="line">WolfPops.Pos = WolfPops.Pos(<span class="number">1</span>:SearchAgents, :);       <span class="comment">% 对种群进行修正</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 报错</span></span><br><span class="line"><span class="keyword">if</span> cSearchAgents &lt; <span class="number">4</span></span><br><span class="line">    error(<span class="string">&#x27;搜索智能体个数过少&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">% 初始化解</span></span><br><span class="line">Alpha_pos = <span class="built_in">zeros</span>(ClassPops.k, dim);          <span class="comment">% α解</span></span><br><span class="line">Alpha_score = <span class="number">1</span> ./ <span class="built_in">zeros</span>(ClassPops.k, <span class="number">1</span>);     <span class="comment">% α解适应度</span></span><br><span class="line"></span><br><span class="line">Beta_pos = <span class="built_in">zeros</span>(ClassPops.k, dim);            <span class="comment">% β解</span></span><br><span class="line">Beta_score = <span class="number">1</span> ./ <span class="built_in">zeros</span>(ClassPops.k, <span class="number">1</span>);       <span class="comment">% β解适应度</span></span><br><span class="line"></span><br><span class="line">Delta_pos = <span class="built_in">zeros</span>(ClassPops.k, dim);           <span class="comment">% δ解</span></span><br><span class="line">Delta_score = <span class="number">1</span> ./ <span class="built_in">zeros</span>(ClassPops.k, <span class="number">1</span>);      <span class="comment">% δ解适应度</span></span><br><span class="line"></span><br><span class="line">Fitness_list = <span class="built_in">zeros</span>(ClassPops.k, Max_iter);  <span class="comment">% 适应度曲线</span></span><br><span class="line"></span><br><span class="line">Pops.PosDim = WolfPops.PosDim;  <span class="comment">% 子种群</span></span><br><span class="line">Pops.lb = WolfPops.lb;</span><br><span class="line">Pops.ub = WolfPops.ub;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 迭代求解</span></span><br><span class="line">tic</span><br><span class="line">fprintf(<span class="string">&#x27;&gt;&gt;MP-GWO 优化中    00.00%%&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> iter = <span class="number">1</span> : Max_iter</span><br><span class="line"></span><br><span class="line">    <span class="comment">% ①  更新参数a</span></span><br><span class="line">    a = <span class="number">2</span> - iter * <span class="number">2</span> / Max_iter;          <span class="comment">% 线性递减</span></span><br><span class="line">    <span class="comment">%a = 2 * cos((iter/Max_iter)*pi/2);   % 非线性递减</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">% ②  聚类</span></span><br><span class="line">    <span class="keyword">if</span> iter &gt; <span class="number">1</span> <span class="comment">%初始化时聚完一次了，节省计算量</span></span><br><span class="line">    ClassPops = PopsCluster(WolfPops, UAV);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span> : ClassPops.k</span><br><span class="line">        Positions = ClassPops.Pos&#123;k&#125;;  </span><br><span class="line"></span><br><span class="line">        <span class="comment">% ③  寻找 α、β、δ 狼</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : cSearchAgents</span><br><span class="line">            <span class="comment">% 读取目标函数</span></span><br><span class="line">            fitness = ClassPops.Fitness(k, <span class="built_in">i</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">% 更新 Alpha、Beta 和 Delta 解</span></span><br><span class="line">            <span class="keyword">if</span> fitness &lt;= Alpha_score(k)  <span class="comment">% 适应能力最强（因为性能指标越小越好，因此为小于号）</span></span><br><span class="line">                Alpha_score(k) = fitness;</span><br><span class="line">                Alpha_pos(k, :) = Positions(<span class="built_in">i</span>, :);</span><br><span class="line">            <span class="keyword">end</span> </span><br><span class="line">            <span class="keyword">if</span> fitness &gt; Alpha_score(k) &amp;&amp; fitness &lt;= Beta_score(k)</span><br><span class="line">                Beta_score(k) = fitness;</span><br><span class="line">                Beta_pos(k, :) = Positions(<span class="built_in">i</span>, :);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">if</span> fitness &gt; Alpha_score(k) &amp;&amp; fitness &gt; Beta_score(k) &amp;&amp; fitness &lt;= Delta_score(k)</span><br><span class="line">                Delta_score(k) = fitness;</span><br><span class="line">                Delta_pos(k, :) = Positions(<span class="built_in">i</span>, :);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% ④  更新位置（朝着前三只狼位置前进）</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : cSearchAgents</span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : dim</span><br><span class="line">    </span><br><span class="line">                r1 = <span class="built_in">rand</span>();</span><br><span class="line">                r2 = <span class="built_in">rand</span>();</span><br><span class="line">                A1 = <span class="number">2</span>*a*r1 - a;</span><br><span class="line">                C1 = <span class="number">2</span>*r2;</span><br><span class="line">                D_alpha = <span class="built_in">abs</span>(C1*Alpha_pos(k, <span class="built_in">j</span>) - Positions(<span class="built_in">i</span>, <span class="built_in">j</span>));</span><br><span class="line">                X1 = Alpha_pos(k, <span class="built_in">j</span>) - A1*D_alpha;</span><br><span class="line">    </span><br><span class="line">                r1 = <span class="built_in">rand</span>();</span><br><span class="line">                r2 = <span class="built_in">rand</span>();            </span><br><span class="line">                A2 = <span class="number">2</span>*a*r1 - a;</span><br><span class="line">                C2 = <span class="number">2</span>*r2;</span><br><span class="line">                D_beta = <span class="built_in">abs</span>(C2*Beta_pos(k, <span class="built_in">j</span>) - Positions(<span class="built_in">i</span>, <span class="built_in">j</span>));</span><br><span class="line">                X2 = Beta_pos(k, <span class="built_in">j</span>) - A2*D_beta;</span><br><span class="line">                </span><br><span class="line">                r1 = <span class="built_in">rand</span>();</span><br><span class="line">                r2 = <span class="built_in">rand</span>();</span><br><span class="line">                A3 = <span class="number">2</span>*a*r1 - a;</span><br><span class="line">                C3 = <span class="number">2</span>*r2;</span><br><span class="line">                D_delta = <span class="built_in">abs</span>(C3*Delta_pos(k, <span class="built_in">j</span>) - Positions(<span class="built_in">i</span>, <span class="built_in">j</span>));</span><br><span class="line">                X3 = Delta_pos(k, <span class="built_in">j</span>) - A3*D_delta;</span><br><span class="line">                </span><br><span class="line">                <span class="comment">% 静态更新</span></span><br><span class="line">                Positions(<span class="built_in">i</span>, <span class="built_in">j</span>) = (X1 + X2 + X3) / <span class="number">3</span>;</span><br><span class="line">                <span class="comment">% 动态更新</span></span><br><span class="line">                <span class="comment">%                 q = g * a; %阈值</span></span><br><span class="line">                <span class="comment">%                 if abs(Alpha_score(k)-Delta_score(k)) &gt; q</span></span><br><span class="line">                <span class="comment">%                     Sum_score = Alpha_score(k) + Beta_score(k) + Delta_score(k);</span></span><br><span class="line">                <span class="comment">%                     Positions(i, j) = (Alpha_score(k)*X1 + Beta_score(k)*X2 + Delta_score(k)*X3) / Sum_score;</span></span><br><span class="line">                <span class="comment">%                 else</span></span><br><span class="line">                <span class="comment">%                     Positions(i, j) = (X1 + X2 + X3) / 3;</span></span><br><span class="line">                <span class="comment">%                 end</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">% ⑤  调整不符合要求的状态变量</span></span><br><span class="line">    Pops.Pos = Positions;</span><br><span class="line">    ProbPoints =  ClassPops.ProbPoints&#123;k&#125;;</span><br><span class="line">    [Pops, ~] = BoundAdjust(Pops, ProbPoints, UAV);</span><br><span class="line"></span><br><span class="line">    <span class="comment">% ⑥  存储适应度</span></span><br><span class="line">    Fitness_list(k, iter) = Alpha_score(k);</span><br><span class="line"></span><br><span class="line">    <span class="comment">% ⑦  合并种群</span></span><br><span class="line">    WolfPops.Pos(cSearchAgents*(k<span class="number">-1</span>)+<span class="number">1</span>:cSearchAgents*k, :) = Pops.Pos;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> iter/Max_iter*<span class="number">100</span> &lt; <span class="number">10</span></span><br><span class="line">        fprintf(<span class="string">&#x27;\b\b\b\b\b%.2f%%&#x27;</span>, iter/Max_iter*<span class="number">100</span>)</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        fprintf(<span class="string">&#x27;\b\b\b\b\b\b%.2f%%&#x27;</span>, iter/Max_iter*<span class="number">100</span>)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">fprintf(<span class="string">&#x27;\n\n&gt;&gt;计算完成！\n\n&#x27;</span>)</span><br><span class="line">toc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 寻找 α β δ 位置</span></span><br><span class="line">n = <span class="number">3</span>; </span><br><span class="line">A = ClassPops.Fitness; </span><br><span class="line">t = findmin(A, n);</span><br><span class="line">index = cSearchAgents * (t(:, <span class="number">1</span>) - <span class="number">1</span>) + t(:, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">real_Alpha_no = index(<span class="number">1</span>);</span><br><span class="line">real_Beta_no = index(<span class="number">2</span>);</span><br><span class="line">real_Delta_no = index(<span class="number">3</span>);</span><br><span class="line">Alpha_Data = ClassPops.Data&#123;t(<span class="number">1</span>, <span class="number">1</span>)&#125;&#123;t(<span class="number">1</span>, <span class="number">2</span>)&#125;  ;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 输出值</span></span><br><span class="line">solution.method = <span class="string">&#x27;MP-GWO&#x27;</span>;                                <span class="comment">% 算法</span></span><br><span class="line"><span class="comment">% solution.ClassPops = ClassPops;                          % 分类信息</span></span><br><span class="line">solution.WolfPops = WolfPops;                              <span class="comment">% 所有解种群信息</span></span><br><span class="line">solution.Tracks = Pops2Tracks(WolfPops, UAV);              <span class="comment">% 所有解航迹信息</span></span><br><span class="line">solution.Fitness_list = <span class="built_in">mean</span>(Fitness_list, <span class="number">1</span>);             <span class="comment">% 所有α解的平均适应度曲线</span></span><br><span class="line">solution.Alpha_Data = Alpha_Data;                          <span class="comment">% 真 · α 的威胁信息</span></span><br><span class="line">solution.Alpha_no = real_Alpha_no;                         <span class="comment">% 真 · α 的位置</span></span><br><span class="line">solution.Beta_no = real_Beta_no;                           <span class="comment">% 真 · β 的位置</span></span><br><span class="line">solution.Delta_no = real_Delta_no;                         <span class="comment">% 真 · δ 的位置</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 寻找A矩阵中最小n个数的位置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">t</span> = <span class="title">findmin</span><span class="params">(A, n)</span></span></span><br><span class="line">    t = <span class="built_in">sort</span>(A(:));</span><br><span class="line">    [x, y] = <span class="built_in">find</span>(A &lt;= t(n), n);</span><br><span class="line">    t = [x, y];         <span class="comment">% 前n个最小项在矩阵A中的位置[行,列]</span></span><br><span class="line">    B = <span class="built_in">zeros</span>(n, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : n</span><br><span class="line">        B(<span class="built_in">i</span>) = A(t(<span class="built_in">i</span>, <span class="number">1</span>), t(<span class="built_in">i</span>, <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    [~, index] = <span class="built_in">sort</span>(B);</span><br><span class="line">    t = t(index, :); <span class="comment">% 前n个从小到大排序的位置</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 对种群进行聚类</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[ClassPops]</span> = <span class="title">PopsCluster</span><span class="params">(WolfPops, UAV)</span></span></span><br><span class="line"></span><br><span class="line">SearchAgents = <span class="built_in">size</span>(WolfPops.Pos, <span class="number">1</span>);  <span class="comment">% 智能体个数 </span></span><br><span class="line">Dim = WolfPops.PosDim;                <span class="comment">% 智能体维度</span></span><br><span class="line">Tracks = Pops2Tracks(WolfPops, UAV); <span class="comment">% 智能体转换成航迹信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 计算适应度</span></span><br><span class="line">o_Fitness = <span class="built_in">zeros</span>(SearchAgents, <span class="number">1</span>); <span class="comment">% 60*1</span></span><br><span class="line">o_subF = []; <span class="comment">% 5*60</span></span><br><span class="line">o_ProbPoints = cell(SearchAgents, <span class="number">1</span>);  <span class="comment">% 60*1</span></span><br><span class="line">o_Data = cell(SearchAgents, <span class="number">1</span>); <span class="comment">% 60*1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% parfor 并行计算适应度</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:SearchAgents</span><br><span class="line">    [fitness, subF, Data] = ObjFun(Tracks&#123;<span class="built_in">i</span>&#125;, UAV);</span><br><span class="line">    o_ProbPoints&#123;<span class="built_in">i</span>&#125; = Data.ProbPoint;  <span class="comment">%cell-cell</span></span><br><span class="line">    o_Data(<span class="built_in">i</span>) = &#123;Data&#125;; <span class="comment">%cell-struct</span></span><br><span class="line">    o_Fitness(<span class="built_in">i</span>) = fitness; <span class="comment">%vector-var</span></span><br><span class="line">    o_subF = [o_subF, subF]; </span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 分类</span></span><br><span class="line">k = <span class="built_in">size</span>(subF, <span class="number">1</span>);                          <span class="comment">% 分 k 类（由objfun决定）</span></span><br><span class="line">cSearchAgents = <span class="built_in">floor</span>(SearchAgents / k);    <span class="comment">% 并行智能体个数</span></span><br><span class="line">cFitness = <span class="built_in">zeros</span>(k, cSearchAgents);         <span class="comment">% 保存每类的适应度</span></span><br><span class="line">cPositions = cell(k, <span class="number">1</span>);                    <span class="comment">% 保存每类的位置信息</span></span><br><span class="line">cTracks = cell(k, <span class="number">1</span>);                       <span class="comment">% 保存每类的航迹信息</span></span><br><span class="line">cProbPoints = cell(k, <span class="number">1</span>);                   <span class="comment">% 保存每类的有问题航迹点</span></span><br><span class="line">cData = cell(k, <span class="number">1</span>);                         <span class="comment">% 存储每类的检测报告</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 排序</span></span><br><span class="line">[~, Index] = <span class="built_in">sort</span>(o_subF, <span class="number">2</span>, <span class="string">&quot;ascend&quot;</span>) ;     <span class="comment">% 沿维度2升序排序，返回新矩阵和序号</span></span><br><span class="line">                                             <span class="comment">% fitness越小越好</span></span><br><span class="line"><span class="comment">% 聚类</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span>:k</span><br><span class="line">    Positions = <span class="built_in">zeros</span>(cSearchAgents, Dim);</span><br><span class="line">    batchTrack = cell(cSearchAgents, <span class="number">1</span>);</span><br><span class="line">    batchProbPoints = cell(cSearchAgents, <span class="number">1</span>);</span><br><span class="line">    batchData = cell(cSearchAgents, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span>:cSearchAgents</span><br><span class="line">        idx = Index(<span class="built_in">i</span>, <span class="built_in">j</span>);</span><br><span class="line">        cFitness(<span class="built_in">i</span>, <span class="built_in">j</span>) = o_Fitness(idx); <span class="comment">%mat-vector</span></span><br><span class="line">        Positions(<span class="built_in">j</span>, :) = WolfPops.Pos(idx, :); <span class="comment">%mat-mat</span></span><br><span class="line">        batchTrack&#123;<span class="built_in">j</span>&#125; = Tracks&#123;idx&#125;; <span class="comment">%cell-cell</span></span><br><span class="line">        batchProbPoints&#123;<span class="built_in">j</span>&#125; = o_ProbPoints&#123;idx&#125;; <span class="comment">%cell-cell</span></span><br><span class="line">        batchData&#123;<span class="built_in">j</span>&#125; = o_Data&#123;idx&#125;; <span class="comment">%cell-cell</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    cPositions(<span class="built_in">i</span>) = &#123;Positions&#125;; <span class="comment">%cell-mat</span></span><br><span class="line">    cTracks&#123;<span class="built_in">i</span>&#125; = batchTrack; <span class="comment">%cell-cell</span></span><br><span class="line">    cProbPoints&#123;<span class="built_in">i</span>&#125; = batchProbPoints; <span class="comment">%cell-cell</span></span><br><span class="line">    cData&#123;<span class="built_in">i</span>&#125; = batchData; <span class="comment">%cell-cell</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 输出</span></span><br><span class="line">ClassPops.Pos = cPositions;</span><br><span class="line">ClassPops.Tracks = cTracks;</span><br><span class="line">ClassPops.ProbPoints = cProbPoints;</span><br><span class="line">ClassPops.Data = cData;</span><br><span class="line">ClassPops.Fitness = cFitness;</span><br><span class="line">ClassPops.SearchAgents = cSearchAgents;</span><br><span class="line">ClassPops.k = k;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[F, subF, Data]</span> = <span class="title">ObjFun</span><span class="params">(Track, UAV)</span></span></span><br><span class="line"><span class="comment">%OBJFUN 目标函数、适应度函数（一个agent的）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 多目标优化权重设置（必需为行向量）</span></span><br><span class="line">weight = [ <span class="number">0.05</span>, <span class="number">0.05</span>, <span class="number">0.1</span>, <span class="number">0.7</span>, <span class="number">0.7</span> ]; <span class="comment">% 默认权重</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 表达式系数调整（将各项指标无量纲化）</span></span><br><span class="line">p1 = <span class="number">1</span>;    <span class="comment">% 燃料项（已除以最大航程）</span></span><br><span class="line">p21 = <span class="number">1</span>;   <span class="comment">% 高度项</span></span><br><span class="line">p22 = <span class="number">1</span>;   <span class="comment">% 低度项</span></span><br><span class="line">p31 = <span class="number">1.2</span>; <span class="comment">% 雷达威胁</span></span><br><span class="line">p32 = <span class="number">1.1</span>; <span class="comment">% 其余威胁</span></span><br><span class="line">p4 = <span class="number">1.2</span>;  <span class="comment">% 时间同步项</span></span><br><span class="line">p5 = <span class="number">1</span>;    <span class="comment">% 碰撞项</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 进行航迹检测</span></span><br><span class="line">report = TrackDetect(Track, UAV);  <span class="comment">% Track 为 struck结构</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 燃油（论文3）</span></span><br><span class="line">ZZ = sum(UAV.limt.L);</span><br><span class="line">MaxL_mt = ZZ(<span class="number">2</span>);</span><br><span class="line">f_o = p1 * report.L_mt / MaxL_mt;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 高度（论文3）</span></span><br><span class="line">dim = UAV.PointDim;</span><br><span class="line"><span class="keyword">if</span> dim &lt; <span class="number">3</span></span><br><span class="line">    f_h = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    f_h = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : UAV.num</span><br><span class="line">        Hmax = UAV.limt.h(<span class="built_in">i</span>, <span class="number">2</span>);</span><br><span class="line">        Hmin = UAV.limt.h(<span class="built_in">i</span>, <span class="number">1</span>); </span><br><span class="line">        <span class="keyword">for</span> k = <span class="number">1</span> : UAV.PointNum(<span class="built_in">i</span>)</span><br><span class="line">            z = Track.P&#123;<span class="built_in">i</span>&#125;(<span class="number">3</span>, k);</span><br><span class="line">            <span class="keyword">if</span> z&gt;Hmax</span><br><span class="line">                fk = p21 * (z - Hmax);</span><br><span class="line">            <span class="keyword">elseif</span> z &gt;= Hmin</span><br><span class="line">                fk = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                fk = p22 * (Hmin - z);</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            f_h = f_h + fk;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 威胁（论文2）</span></span><br><span class="line"><span class="comment">% 注意：只适应球或圆区域，不适合圆柱区域</span></span><br><span class="line">O_r = UAV.Menace.radar(: ,<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>);            <span class="comment">%雷达            </span></span><br><span class="line">O_o = UAV.Menace.other(: ,<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>);            <span class="comment">%导弹，火炮，气象等    </span></span><br><span class="line">f_t = <span class="number">0</span>;  <span class="comment">% 威胁代价</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : UAV.num</span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span> : UAV.PointNum(<span class="built_in">i</span>)</span><br><span class="line">        P = Track.P&#123;<span class="built_in">i</span>&#125;(:, k)&#x27; ;  <span class="comment">% 转置成 1*dim</span></span><br><span class="line">        <span class="keyword">for</span> m = <span class="number">1</span> : <span class="built_in">size</span>(O_r, <span class="number">1</span>)</span><br><span class="line">            fk = p31 / (norm(P - O_r(m, :)))^<span class="number">4</span>;</span><br><span class="line">            f_t = f_t + fk;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">for</span> m = <span class="number">1</span> : <span class="built_in">size</span>(O_o, <span class="number">1</span>)</span><br><span class="line">            fk = p32 / norm(P - O_o(m, :));</span><br><span class="line">            f_t = f_t + fk;</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 同步（论文1）</span></span><br><span class="line">f_m = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : UAV.num</span><br><span class="line">    Li = report.L(<span class="built_in">i</span>);</span><br><span class="line">    tmax = Li / UAV.limt.v(<span class="built_in">i</span>,<span class="number">1</span>);</span><br><span class="line">    tmin = Li / UAV.limt.v(<span class="built_in">i</span>,<span class="number">2</span>);</span><br><span class="line">    ti = report.time(<span class="built_in">i</span>);</span><br><span class="line">    tc = UAV.tc;</span><br><span class="line">    <span class="keyword">if</span> tc &lt;= tmax &amp;&amp; tc &gt;= tmin</span><br><span class="line">        fk = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        fk = p4 * <span class="built_in">abs</span>(ti - tc);</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    f_m = f_m + fk;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 碰撞（论文1）</span></span><br><span class="line">f_c = p5 * report.col_times;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 目标函数分量（必需是列向量，否则无法聚类）</span></span><br><span class="line">subF = [ f_o; f_h; f_t; f_m; f_c ]; <span class="comment">% 5*1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% 加权目标函数</span></span><br><span class="line">F = weight * subF ;</span><br><span class="line"></span><br><span class="line"><span class="comment">% 输出信息</span></span><br><span class="line">Data.ProbPoint = report.ProbPoint;    <span class="comment">% 所有有问题的点</span></span><br><span class="line">Data.AngleProb = report.AngleProb;    <span class="comment">% 不满足角度约束的点</span></span><br><span class="line">Data.TrajProb = report.TrajProb;      <span class="comment">% 不满足最小航迹间隔的点</span></span><br><span class="line">Data.Threat = report.Threat;          <span class="comment">% 受威胁的点</span></span><br><span class="line"></span><br><span class="line">Data.L = report.L;                    <span class="comment">% 每个无人机的航程</span></span><br><span class="line">Data.t = report.time;                 <span class="comment">% 每个无人机的时间</span></span><br><span class="line">Data.c = report.col_times;            <span class="comment">% 所有无人机总碰撞次数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Tracks</span> = <span class="title">Pops2Tracks</span><span class="params">(WolfPops, UAV)</span></span></span><br><span class="line"><span class="comment">%POPS2TRACKS 将狼群转换为航迹</span></span><br><span class="line"></span><br><span class="line">SearchAgents = <span class="built_in">size</span>(WolfPops.Pos, <span class="number">1</span>);    <span class="comment">% 种群数量</span></span><br><span class="line">UAVnum = UAV.num;                        <span class="comment">% 无人机个数</span></span><br><span class="line">dim = UAV.PointDim;                      <span class="comment">% 仿真维度</span></span><br><span class="line">v = WolfPops.Pos(:, <span class="keyword">end</span>-UAVnum+<span class="number">1</span>:<span class="keyword">end</span>);   <span class="comment">% 协同无人机速度</span></span><br><span class="line">P = WolfPops.Pos(:, <span class="number">1</span>:<span class="keyword">end</span>-UAVnum);       <span class="comment">% 协同无人机航迹 xy</span></span><br><span class="line"></span><br><span class="line">Tracks = cell(SearchAgents, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> agent = <span class="number">1</span> : SearchAgents</span><br><span class="line">    a.V = v(agent, :)&#x27;;</span><br><span class="line">    P_a = P(agent, :);</span><br><span class="line">    a.P = cell(UAVnum, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> =<span class="number">1</span>:UAVnum</span><br><span class="line">        PointNum = UAV.PointNum(<span class="built_in">i</span>);   </span><br><span class="line">        <span class="comment">% 三维仿真这里得改 PointNum*dim</span></span><br><span class="line">        P_ai = P_a(<span class="number">1</span> : PointNum*dim);</span><br><span class="line">        P_ai = <span class="built_in">reshape</span>(P_ai, dim, PointNum);</span><br><span class="line">        P_a = P_a(PointNum*dim+<span class="number">1</span> : <span class="keyword">end</span>);</span><br><span class="line">        a.P(<span class="built_in">i</span>) =  &#123;P_ai&#125;;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    Tracks(agent) = &#123;a&#125;;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[WolfPops, Tracks]</span> = <span class="title">PopsInit</span><span class="params">(UAV, SearchAgents, GreedyInit)</span></span></span><br><span class="line"><span class="comment">%POPSINIT 初始化狼群&quot;位置&quot;</span></span><br><span class="line"><span class="keyword">if</span> (nargin&lt;<span class="number">3</span>)</span><br><span class="line">GreedyInit = <span class="built_in">false</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 〇 程序自检</span></span><br><span class="line"><span class="keyword">if</span> SearchAgents &lt; <span class="number">4</span></span><br><span class="line">    error(<span class="string">&#x27;搜索智能体个数过少&#x27;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% ① 随机初始化解空间</span></span><br><span class="line">dim = UAV.PointDim;  <span class="comment">% 坐标轴维度 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 速度 n个无人机</span></span><br><span class="line">lb_v = UAV.limt.v(:, <span class="number">1</span>)&#x27; ;    <span class="comment">% 1*n</span></span><br><span class="line">ub_v = UAV.limt.v(:, <span class="number">2</span>)&#x27; ;   <span class="comment">% 1*n</span></span><br><span class="line">V0 = <span class="built_in">rand</span>(SearchAgents, UAV.num) .* <span class="built_in">repmat</span>(ub_v - lb_v, SearchAgents, <span class="number">1</span>) + <span class="built_in">repmat</span>(lb_v, SearchAgents, <span class="number">1</span>);</span><br><span class="line"><span class="comment">%  对于UAV，每一行表示每架飞机的参数</span></span><br><span class="line"><span class="comment">%  对于Agent，每一行表示每个智能体的参数，列表示飞机的参数平铺</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 航迹点 </span></span><br><span class="line">P0 = [];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : UAV.num</span><br><span class="line">    lb = [UAV.limt.x(<span class="built_in">i</span>, <span class="number">1</span>), UAV.limt.y(<span class="built_in">i</span>, <span class="number">1</span>), UAV.limt.z(<span class="built_in">i</span>, <span class="number">1</span>)] ;     <span class="comment">% 1*3 维</span></span><br><span class="line">    ub = [UAV.limt.x(<span class="built_in">i</span>, <span class="number">2</span>), UAV.limt.y(<span class="built_in">i</span>, <span class="number">2</span>), UAV.limt.z(<span class="built_in">i</span>, <span class="number">2</span>)] ;    <span class="comment">% 1*3 维</span></span><br><span class="line">    <span class="keyword">if</span> dim &lt; <span class="number">3</span></span><br><span class="line">        lb = lb(<span class="number">1</span>:<span class="number">2</span>);      <span class="comment">% 1*2 维</span></span><br><span class="line">        ub = ub(<span class="number">1</span>:<span class="number">2</span>);    <span class="comment">% 1*2 维</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    PointNum = UAV.PointNum(<span class="built_in">i</span>);                  <span class="comment">% 航迹点个数</span></span><br><span class="line">    P_i = <span class="built_in">rand</span>(SearchAgents, dim*PointNum) .* <span class="built_in">repmat</span>(ub - lb, SearchAgents, PointNum) + <span class="built_in">repmat</span>(lb, SearchAgents, PointNum);</span><br><span class="line">   </span><br><span class="line">    <span class="comment">% 贪婪生成法（从第二个航迹点开始生成贪婪点）</span></span><br><span class="line">    <span class="keyword">if</span> GreedyInit  </span><br><span class="line">        <span class="keyword">for</span> k = <span class="number">2</span> : PointNum    </span><br><span class="line">            ep = <span class="number">0.2</span>;      <span class="comment">% 阈值</span></span><br><span class="line">            m = <span class="built_in">rand</span>();  <span class="comment">% 变异量</span></span><br><span class="line">            <span class="keyword">if</span> m &gt;= ep   <span class="comment">% 当变异参数超过阈值时，第k个航迹点贪婪生成，否则随机生成</span></span><br><span class="line">            <span class="comment">% 下限是上一个航迹点，上限是终点</span></span><br><span class="line">                lb = P_i(:, dim*(k<span class="number">-1</span>)-dim+<span class="number">1</span>:dim*(k<span class="number">-1</span>));         <span class="comment">% N*2维</span></span><br><span class="line">                ub = <span class="built_in">repmat</span>(UAV.G(<span class="built_in">i</span>, :), SearchAgents, <span class="number">1</span>);   <span class="comment">% N*2维</span></span><br><span class="line">                P_i(:, dim*k-dim+<span class="number">1</span>:dim*k) = <span class="built_in">rand</span>(SearchAgents, dim) .* (ub-lb) + lb;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    P0 = [P0, P_i];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">WolfPops.Pos = [P0, V0]; <span class="comment">% 狼群位置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% ② 狼群位置上下限</span></span><br><span class="line">lb = [];</span><br><span class="line">ub = [];</span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : UAV.num</span><br><span class="line">    lb_i = [UAV.limt.x(<span class="built_in">i</span>, <span class="number">1</span>), UAV.limt.y(<span class="built_in">i</span>, <span class="number">1</span>), UAV.limt.z(<span class="built_in">i</span>, <span class="number">1</span>)] ;     <span class="comment">% 1*3 维</span></span><br><span class="line">    ub_i = [UAV.limt.x(<span class="built_in">i</span>, <span class="number">2</span>), UAV.limt.y(<span class="built_in">i</span>, <span class="number">2</span>), UAV.limt.z(<span class="built_in">i</span>, <span class="number">2</span>)] ;    <span class="comment">% 1*3 维</span></span><br><span class="line">    <span class="keyword">if</span> dim &lt; <span class="number">3</span></span><br><span class="line">        lb_i = lb_i(<span class="number">1</span>:<span class="number">2</span>);      <span class="comment">% 1*2 维</span></span><br><span class="line">        ub_i = ub_i(<span class="number">1</span>:<span class="number">2</span>);    <span class="comment">% 1*2 维</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    PointNum = UAV.PointNum(<span class="built_in">i</span>);</span><br><span class="line">    lb_i = <span class="built_in">repmat</span>(lb_i, <span class="number">1</span>, PointNum);</span><br><span class="line">    ub_i = <span class="built_in">repmat</span>(ub_i, <span class="number">1</span>, PointNum);</span><br><span class="line">    </span><br><span class="line">    lb = [lb, lb_i];</span><br><span class="line">    ub = [ub, ub_i];</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">lb = [lb, lb_v];</span><br><span class="line">ub = [ub, ub_v];</span><br><span class="line"></span><br><span class="line">WolfPops.PosDim = <span class="built_in">size</span>(lb, <span class="number">2</span>);</span><br><span class="line">WolfPops.lb = lb;</span><br><span class="line">WolfPops.ub = ub;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">% ③ 生成初始航迹</span></span><br><span class="line">Tracks = Pops2Tracks(WolfPops, UAV); </span><br><span class="line"></span><br><span class="line">clc</span><br><span class="line">fprintf(<span class="string">&#x27;&gt;&gt;算法初始化完成！\n\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[report]</span> = <span class="title">TrackDetect</span><span class="params">(Track, UAV)</span></span></span><br><span class="line"><span class="comment">%TRACKDETECT 判断航迹是否符合条件(一个agent的)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 无人机航迹检测</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 威胁检测</span></span><br><span class="line">dim = UAV.PointDim;                       <span class="comment">% 仿真环境维度</span></span><br><span class="line">M = [UAV.Menace.radar; UAV.Menace.other]; <span class="comment">% 威胁区</span></span><br><span class="line"></span><br><span class="line">Threat = cell(UAV.num, <span class="number">1</span>);                <span class="comment">% 威胁结果树</span></span><br><span class="line">Angle = cell(UAV.num, <span class="number">1</span>);                 <span class="comment">% 转角检测结果树</span></span><br><span class="line">MiniTraj = cell(UAV.num, <span class="number">1</span>);              <span class="comment">% 最小航迹片段检测结果树</span></span><br><span class="line">ProbPoint = cell(UAV.num, <span class="number">1</span>);             <span class="comment">% 问题点  </span></span><br><span class="line"></span><br><span class="line">L = cell(UAV.num, <span class="number">1</span>);                     <span class="comment">% 航迹片段树（累加结构）</span></span><br><span class="line">Time = cell(UAV.num, <span class="number">1</span>);                  <span class="comment">% 到达各个点时间树                                          </span></span><br><span class="line">      </span><br><span class="line">L_mt = <span class="number">0</span>;                                 <span class="comment">% 所有无人机航迹之和</span></span><br><span class="line">totalTime = <span class="built_in">zeros</span>(UAV.num, <span class="number">1</span>);            <span class="comment">% 所用时间</span></span><br><span class="line">totalL = <span class="built_in">zeros</span>(UAV.num, <span class="number">1</span>);               <span class="comment">% 每个无人机飞行距离</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : UAV.num</span><br><span class="line">      PointNum = UAV.PointNum(<span class="built_in">i</span>);   </span><br><span class="line">      Judge = <span class="built_in">zeros</span>(<span class="number">1</span>, PointNum+<span class="number">1</span>);</span><br><span class="line">      L_i = <span class="built_in">zeros</span>(<span class="number">1</span>, PointNum+<span class="number">1</span>);</span><br><span class="line">      Time_i = <span class="built_in">zeros</span>(<span class="number">1</span>, PointNum+<span class="number">1</span>);</span><br><span class="line">      Angle_i = <span class="built_in">zeros</span>(<span class="number">1</span>, PointNum+<span class="number">1</span>);</span><br><span class="line">      Traj_i = <span class="built_in">zeros</span>(<span class="number">1</span>, PointNum+<span class="number">1</span>);</span><br><span class="line">      ProbPoint_i = <span class="built_in">zeros</span>(<span class="number">1</span>, PointNum+<span class="number">1</span>);</span><br><span class="line">      <span class="comment">% 进行检测</span></span><br><span class="line">      l = <span class="number">0</span>;</span><br><span class="line">      V = Track.V(<span class="built_in">i</span>);</span><br><span class="line">      <span class="keyword">for</span> k = <span class="number">1</span> : PointNum</span><br><span class="line">            <span class="comment">% 前向检测</span></span><br><span class="line">            P2 = Track.P&#123;<span class="built_in">i</span>&#125;(:, k)&#x27; ;   <span class="comment">% 转置成 1*dim</span></span><br><span class="line">            <span class="keyword">if</span> k == <span class="number">1</span></span><br><span class="line">                P1 = UAV.S(<span class="built_in">i</span>, :);</span><br><span class="line">                ZZ = P2 - P1;</span><br><span class="line">                phi0 = <span class="built_in">atan2</span>(ZZ(<span class="number">2</span>), ZZ(<span class="number">1</span>));   <span class="comment">% 偏角检测</span></span><br><span class="line">                phi1 = phi0;</span><br><span class="line">                d_phi = phi1 - phi0;</span><br><span class="line">                <span class="keyword">if</span> dim &gt; <span class="number">2</span>                    <span class="comment">% 倾角检测</span></span><br><span class="line">                    theta0 = <span class="built_in">atan</span>(ZZ(<span class="number">3</span>) / <span class="built_in">sqrt</span>(ZZ(<span class="number">1</span>)^<span class="number">2</span> + ZZ(<span class="number">2</span>)^<span class="number">2</span>));</span><br><span class="line">                    theta1 = theta0;</span><br><span class="line">                    d_theta = theta1 - theta0;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    d_theta = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                P1 = Track.P&#123;<span class="built_in">i</span>&#125;(:, k<span class="number">-1</span>)&#x27; ;  <span class="comment">% 转置成 1*dim</span></span><br><span class="line">                ZZ = P2 - P1;</span><br><span class="line">                phi1 = <span class="built_in">atan2</span>(ZZ(<span class="number">2</span>), ZZ(<span class="number">1</span>));</span><br><span class="line">                d_phi = phi1 - phi0;</span><br><span class="line">                phi0 = phi1;</span><br><span class="line">                <span class="keyword">if</span> dim &gt; <span class="number">2</span>                                   </span><br><span class="line">                    theta1 = <span class="built_in">atan</span>(ZZ(<span class="number">3</span>) / <span class="built_in">sqrt</span>(ZZ(<span class="number">1</span>)^<span class="number">2</span> + ZZ(<span class="number">2</span>)^<span class="number">2</span>));</span><br><span class="line">                    d_theta = theta1 - theta0;</span><br><span class="line">                    theta0 = theta1;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    d_theta = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">         </span><br><span class="line">            [across, ~] = CheckThreat(P1, P2, M); <span class="comment">% 威胁检测</span></span><br><span class="line">            Judge(k) = across;</span><br><span class="line">            </span><br><span class="line">            dl = norm(P1 - P2);</span><br><span class="line">            l = l + dl; <span class="comment">% 累加距离</span></span><br><span class="line">            t = l / V;  <span class="comment">% 时间点</span></span><br><span class="line">            L_i(k) = l;</span><br><span class="line">            Time_i(k) = t;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(d_phi) &gt; UAV.limt.phi(<span class="built_in">i</span>, <span class="number">2</span>)  ||  <span class="built_in">abs</span>(d_theta) &gt; UAV.limt.theta(<span class="built_in">i</span>, <span class="number">2</span>)</span><br><span class="line">                Angle_i(k) = <span class="built_in">true</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Angle_i(k) = <span class="built_in">false</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> dl &lt; UAV.limt.L(<span class="built_in">i</span>, <span class="number">1</span>)</span><br><span class="line">                Traj_i(k) = <span class="built_in">true</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Traj_i(k) = <span class="built_in">false</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">            ProbPoint_i(k) = Angle_i(k) | Traj_i(k) | Judge(k); <span class="comment">% 问题点</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">% 最后一段检测</span></span><br><span class="line">            <span class="keyword">if</span> k == PointNum</span><br><span class="line">                P1 = UAV.G(<span class="built_in">i</span>, :);</span><br><span class="line">                [across, ~] = CheckThreat(P2, P1, M);</span><br><span class="line">                Judge(k+<span class="number">1</span>) = across;</span><br><span class="line">                </span><br><span class="line">                dl = norm(P1 - P2);</span><br><span class="line">                l = l + dl;</span><br><span class="line">                t = l / V;</span><br><span class="line">                L_i(k+<span class="number">1</span>) = l;</span><br><span class="line">                Time_i(k+<span class="number">1</span>) = t;</span><br><span class="line"></span><br><span class="line">                ZZ = P1-P2;</span><br><span class="line">                phi1 = <span class="built_in">atan2</span>(ZZ(<span class="number">2</span>), ZZ(<span class="number">1</span>));</span><br><span class="line">                d_phi = phi1 - phi0;</span><br><span class="line">                <span class="keyword">if</span> dim&gt;<span class="number">2</span>      </span><br><span class="line">                    theta1 = <span class="built_in">atan</span>(ZZ(<span class="number">3</span>) / <span class="built_in">sqrt</span>(ZZ(<span class="number">1</span>)^<span class="number">2</span> + ZZ(<span class="number">2</span>)^<span class="number">2</span>));</span><br><span class="line">                    d_theta = theta1 - theta0;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    d_theta = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">abs</span>(d_phi) &gt; UAV.limt.phi(<span class="built_in">i</span>, <span class="number">2</span>)  ||  <span class="built_in">abs</span>(d_theta) &gt; UAV.limt.theta(<span class="built_in">i</span>, <span class="number">2</span>)</span><br><span class="line">                    Angle_i(k+<span class="number">1</span>) = <span class="built_in">true</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Angle_i(k+<span class="number">1</span>) = <span class="built_in">false</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> dl &lt; UAV.limt.L(<span class="built_in">i</span>, <span class="number">1</span>)</span><br><span class="line">                    Traj_i(k+<span class="number">1</span>) = <span class="built_in">true</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    Traj_i(k+<span class="number">1</span>) = <span class="built_in">false</span>;</span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">                ProbPoint_i(k+<span class="number">1</span>) = Angle_i(k+<span class="number">1</span>) | Traj_i(k+<span class="number">1</span>) | Judge(k+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">      <span class="keyword">end</span>   </span><br><span class="line">      Threat(<span class="built_in">i</span>) = &#123;Judge&#125;;          <span class="comment">% 检测结果（长度比点的数目多一）</span></span><br><span class="line">      Angle(<span class="built_in">i</span>) = &#123;Angle_i&#125;;         <span class="comment">% 转角</span></span><br><span class="line">      MiniTraj(<span class="built_in">i</span>) = &#123;Traj_i&#125;;       <span class="comment">% 航迹片段</span></span><br><span class="line">      ProbPoint(<span class="built_in">i</span>) = &#123;ProbPoint_i&#125;; <span class="comment">% 问题点</span></span><br><span class="line"></span><br><span class="line">      L(<span class="built_in">i</span>) = &#123;L_i&#125;;                 <span class="comment">% 路径长度（累加）</span></span><br><span class="line">      Time(<span class="built_in">i</span>) = &#123;Time_i&#125;;           <span class="comment">% 时间（累加）</span></span><br><span class="line">      L_mt = L_mt + l;              <span class="comment">% 总长度</span></span><br><span class="line">      totalTime(<span class="built_in">i</span>) = t;             <span class="comment">% 时间</span></span><br><span class="line">      totalL(<span class="built_in">i</span>) = l;                <span class="comment">% 长度</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 多无人机碰撞检测</span></span><br><span class="line">d_safe = UAV.ds; <span class="comment">% 安全距离</span></span><br><span class="line">CollideTimes = <span class="number">0</span>; <span class="comment">% 碰撞次数</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">2</span> : UAV.num</span><br><span class="line">    PointNum_i = UAV.PointNum(<span class="built_in">i</span>);</span><br><span class="line">    <span class="keyword">for</span> k = <span class="number">1</span> : PointNum_i</span><br><span class="line">        P1 = Track.P&#123;<span class="built_in">i</span>&#125;(:, k)&#x27;;  <span class="comment">% K时刻 i 无人机位置</span></span><br><span class="line">        t_i = Time&#123;<span class="built_in">i</span>, <span class="number">1</span>&#125;(k);     <span class="comment">% K时刻 i 无人机时间</span></span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">j</span> = <span class="number">1</span> : <span class="built_in">i</span><span class="number">-1</span></span><br><span class="line">            PointNum_j = UAV.PointNum(<span class="built_in">j</span>);</span><br><span class="line">            flag = <span class="built_in">false</span>; <span class="comment">% </span></span><br><span class="line">            <span class="comment">% 搜索同一时刻的点</span></span><br><span class="line">            <span class="keyword">for</span> kj = <span class="number">1</span> : PointNum_j</span><br><span class="line">                <span class="keyword">if</span> kj ==<span class="number">1</span></span><br><span class="line">                    t_j_l = <span class="number">0</span>;</span><br><span class="line">                    P_l =  UAV.S(<span class="built_in">j</span>, :); </span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    t_j_l = Time&#123;<span class="built_in">j</span>&#125;(kj<span class="number">-1</span>);</span><br><span class="line">                    P_l =  Track.P&#123;<span class="built_in">j</span>&#125;(:, kj<span class="number">-1</span>)&#x27;; </span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">                t_j_r = Time&#123;<span class="built_in">j</span>&#125;(kj);</span><br><span class="line">                P_r =  Track.P&#123;<span class="built_in">j</span>&#125;(:, kj)&#x27;; </span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> t_i &lt;= t_j_r  &amp;&amp;  t_i &gt;= t_j_l</span><br><span class="line">                    flag = <span class="built_in">true</span>;</span><br><span class="line">                    P2 =  P_l + (t_i - t_j_l) / (t_j_r - t_j_l) * (P_r - P_l);<span class="comment">% K时刻 J 无人机位置</span></span><br><span class="line">                    <span class="comment">% K时刻 j 无人机位置</span></span><br><span class="line">                <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="comment">% ———————</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> flag  <span class="comment">% 查找到P2位置，进行碰撞检测</span></span><br><span class="line">                collide = CheckCollide(P1, P2, d_safe);</span><br><span class="line">            <span class="keyword">else</span>     <span class="comment">% 没有P2位置，不会碰</span></span><br><span class="line">                collide = <span class="built_in">false</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">            <span class="keyword">if</span> collide</span><br><span class="line">                CollideTimes = CollideTimes + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">% 生成检测报告</span></span><br><span class="line">report.L_mt = L_mt;               <span class="comment">% 总行程之和</span></span><br><span class="line">report.Threat = Threat;           <span class="comment">% 受威胁的航迹点位置</span></span><br><span class="line">report.AngleProb = Angle;         <span class="comment">% 转角不满足的点</span></span><br><span class="line">report.TrajProb = MiniTraj;       <span class="comment">% 不满足最小航迹间隔的点</span></span><br><span class="line">report.ProbPoint = ProbPoint;     <span class="comment">% 有问题的点</span></span><br><span class="line">report.L = totalL;                <span class="comment">% 飞行距离</span></span><br><span class="line">report.time = totalTime;          <span class="comment">% 飞行时间</span></span><br><span class="line">report.col_times = CollideTimes;  <span class="comment">% 碰撞次数</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 穿越威胁区检测</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[across, across_num]</span> = <span class="title">CheckThreat</span><span class="params">(P1, P2, M)</span></span></span><br><span class="line">    <span class="comment">% 威胁区（球或圆区域，不适合圆柱区域）</span></span><br><span class="line">    O = M(:,<span class="number">1</span>:<span class="keyword">end</span><span class="number">-1</span>);  <span class="comment">% 圆心</span></span><br><span class="line">    R = M(:, <span class="keyword">end</span>);     <span class="comment">% 半径 </span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">% 检测线段是否穿过某个障碍区</span></span><br><span class="line">    total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">i</span> = <span class="number">1</span> : <span class="built_in">size</span>(O, <span class="number">1</span>)</span><br><span class="line">         a = norm(P1 - P2);</span><br><span class="line">         b = norm(P2 - O(<span class="built_in">i</span>, :));</span><br><span class="line">         c = norm(P1 - O(<span class="built_in">i</span>, :));</span><br><span class="line">         <span class="comment">% P1点是否在圆内</span></span><br><span class="line">         <span class="keyword">if</span> c &lt; R(<span class="built_in">i</span>)         </span><br><span class="line">             isHit = <span class="built_in">true</span>;   </span><br><span class="line">         <span class="comment">% P2点是否在圆内</span></span><br><span class="line">         <span class="keyword">elseif</span> b &lt; R(<span class="built_in">i</span>)  </span><br><span class="line">             isHit = <span class="built_in">true</span>;   </span><br><span class="line">         <span class="comment">% P1 P2都不在圆内</span></span><br><span class="line">         <span class="keyword">else</span>               </span><br><span class="line">             dim = <span class="built_in">size</span>(O, <span class="number">2</span>);  <span class="comment">% P1： 1*dim 维</span></span><br><span class="line">             <span class="keyword">if</span> dim &lt; <span class="number">3</span></span><br><span class="line">                 <span class="comment">% 平面情况   </span></span><br><span class="line">                 A = P1(<span class="number">2</span>) - P2(<span class="number">2</span>);</span><br><span class="line">                 B = P2(<span class="number">1</span>) - P1(<span class="number">1</span>);</span><br><span class="line">                 C = P1(<span class="number">1</span>)*P2(<span class="number">2</span>) - P2(<span class="number">1</span>)*P1(<span class="number">2</span>);</span><br><span class="line">                 x = O(<span class="built_in">i</span>, <span class="number">1</span>);</span><br><span class="line">                 y = O(<span class="built_in">i</span>, <span class="number">2</span>);</span><br><span class="line">                 d = <span class="built_in">abs</span>(A*x + B*y + C) / <span class="built_in">sqrt</span>(A^<span class="number">2</span> + B^<span class="number">2</span>); </span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                 <span class="comment">% 空间情况</span></span><br><span class="line">                 PP = P2 - P1;</span><br><span class="line">                 PO = O(<span class="built_in">i</span>, :) - P1;</span><br><span class="line">                 d = norm(<span class="built_in">cross</span>(PP, PO)) / a;</span><br><span class="line">             <span class="keyword">end</span></span><br><span class="line">             <span class="comment">% 距离判据</span></span><br><span class="line">             <span class="keyword">if</span> d &gt;= R(<span class="built_in">i</span>)</span><br><span class="line">                 isHit = <span class="built_in">false</span>;  <span class="comment">% 不相交</span></span><br><span class="line">             <span class="comment">% 角度判据(距离满足条件时两个角都为锐角时相交)</span></span><br><span class="line">             <span class="keyword">elseif</span> d &gt; <span class="number">0</span></span><br><span class="line">                 cosP1 = a^<span class="number">2</span> + c^<span class="number">2</span> - b^<span class="number">2</span> / (<span class="number">2</span>*c*a);</span><br><span class="line">                 cosP2 = a^<span class="number">2</span> + b^<span class="number">2</span> - c^<span class="number">2</span> / (<span class="number">2</span>*b*a);</span><br><span class="line">                 <span class="keyword">if</span> cosP1 &gt; <span class="number">0</span>  &amp;&amp;  cosP2 &gt; <span class="number">0</span></span><br><span class="line">                     isHit = <span class="built_in">true</span>;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                     isHit = <span class="built_in">false</span>;</span><br><span class="line">                 <span class="keyword">end</span></span><br><span class="line">             <span class="comment">% 两点在外，距离为0情况（共线情况）</span></span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">                 <span class="keyword">if</span> a &gt; b  &amp;&amp;  a &gt; c</span><br><span class="line">                    isHit = <span class="built_in">true</span>;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                    isHit = <span class="built_in">false</span>;</span><br><span class="line">                 <span class="keyword">end</span></span><br><span class="line">             <span class="keyword">end</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">         <span class="keyword">if</span> isHit</span><br><span class="line">            total = total + <span class="number">1</span>; <span class="comment">%总共碰撞几次</span></span><br><span class="line">         <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> total &gt; <span class="number">0</span></span><br><span class="line">        across = <span class="built_in">true</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        across = <span class="built_in">false</span>;     <span class="comment">% 是否穿越禁区</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    across_num = total;     <span class="comment">% 穿过禁区的个数</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">%% 碰撞检测</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">[collide]</span> = <span class="title">CheckCollide</span><span class="params">(P1, P2, d_safe)</span></span></span><br><span class="line">    <span class="keyword">if</span> norm(P1 - P2) &gt;= d_safe</span><br><span class="line">        collide = <span class="built_in">false</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        collide = <span class="built_in">true</span>;</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight matlab&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>图片画廊</title>
    <link href="https://whynotv.github.io/posts/8e00.html"/>
    <id>https://whynotv.github.io/posts/8e00.html</id>
    <published>2024-06-12T00:00:00.000Z</published>
    <updated>2024-06-12T15:15:06.944Z</updated>
    
    <content type="html"><![CDATA[<div class="gallery-group-main"><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁紙</div>  <p>收藏的一些壁紙</p>  <a href='/Gallery/wallpaper'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>關於漫威的圖片</p>  <a href='/Gallery/marvel'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>關於OH MY GIRL的圖片</p>  <a href='/Gallery/DC'></a>  </figcaption>  </figure>  </div>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;gallery-group-main&quot;&gt;
&lt;figure class=&quot;gallery-group&quot;&gt;
  &lt;img class=&quot;gallery-group-img no-lightbox&quot; src=&#39;https://i.loli.net/2019/11</summary>
      
    
    
    
    
    <category term="gallery" scheme="https://whynotv.github.io/tags/gallery/"/>
    
  </entry>
  
  <entry>
    <title>hello</title>
    <link href="https://whynotv.github.io/posts/34d2.html"/>
    <id>https://whynotv.github.io/posts/34d2.html</id>
    <published>2024-06-08T10:26:06.000Z</published>
    <updated>2024-06-12T15:15:06.944Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><p>欢迎来到我的个人博客！在这里，我将分享我的想法、经验和项目。</p><h2 id="最新文章"><a href="#最新文章" class="headerlink" title="最新文章"></a>最新文章</h2><ul><li><a href="posts/article1.md">文章标题1</a> - 2024年6月8日</li><li><a href="posts/article2.md">文章标题2</a> - 2024年6月7日</li><li><a href="posts/article3.md">文章标题3</a> - 2024年6月6日</li></ul><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>我是一个热爱编程和写作的开发者。在这个博客中，我会分享我的编程经验、项目以及一些个人见解。<br><div class="tip success"><p>success</p></div><br><div class="tip home"><p>home</p></div><br><div class="tip home"><p>Hello</p></div><br><div class="tip home"><p>测试</p></div><br>这是一条测试信息。。。。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><ul><li><a href="categories/programming.md">编程</a></li><li><a href="categories/life.md">生活</a></li><li><a href="categories/projects.md">项目</a></li></ul><h2 id="联系我"><a href="#联系我" class="headerlink" title="联系我"></a>联系我</h2><ul><li>邮箱: example@example.com</li><li>GitHub: <a href="https://github.com/yourusername">我的GitHub</a></li><li>LinkedIn: <a href="https://www.linkedin.com/in/yourusername">我的LinkedIn</a></li></ul><hr><p>感谢您的访问！希望您能喜欢我的博客内容。</p>]]></content>
    
    
    <summary type="html">文章简单描述</summary>
    
    
    
    <category term="分类" scheme="https://whynotv.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
    <category term="标签" scheme="https://whynotv.github.io/tags/%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
</feed>
